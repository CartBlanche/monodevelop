2007-05-09  Lluis Sanchez Gual <lluis@novell.com> 

	* CSharpBinding.mdp: Don't copy assembly references.

2007-05-08  Jeffrey Stedfast  <fejj@novell.com>

	* Parser/CodeGenerator.cs (GetMemberNamePosition): Fixed to
	support IIndexers.
	(FindParameterReference): Updated for API changes, no longer takes
	an IMethod argument.
	(Visit): Fixed up a bit since params can be parented by either an
	IMethod or an IIndexer.

2007-05-04  Jeffrey Stedfast  <fejj@novell.com>

	* Parser/CodeGenerator.cs (GetParameterNamePosition): Implemented.

	* Parser/Resolver.cs (GetMethod): Check if the cursor is within the
	declaration bounds as well, so that parameter searching works.

2007-05-04  Lluis Sanchez Gual <lluis@novell.com> 

	* Test/Test.cs, Gui/ChooseRuntimePanel.cs, Gui/CodeGenerationPanel.cs,
	  CSharpBinding.addin.xml, CSharpBinding.mdp, Makefile.am: Migration
	  to Mono.Addins.

2007-05-03  Jeffrey Stedfast  <fejj@novell.com>

	* Parser/CodeGenerator.cs (GetMemberNamePosition): Fixed IEvent
	and IProperty logic and also greatly simplified the overall code.

2007-05-03  Jeffrey Stedfast  <fejj@novell.com>

	* Parser/CodeGenerator.cs (FindVariableNamePosition): New
	overloaded function to get the offset of a variable name.
	(FindVariableReferences): New.
	(FindParameterReferences): New.
	(Visit): Added logic for matching LocalVariable and IParameters.

2007-05-02  Jeffrey Stedfast  <fejj@novell.com>

	* Parser/CodeGenerator.cs (RenameClass): Rename all parts of the class
	(in case the class is a partial class).

2007-05-01  Jeffrey Stedfast  <fejj@novell.com>

	* Parser/CodeGenerator.cs (CreateReference): Trim the name to the
	base name (we don't want the FullyQualifiedName). Also do some
	fixing of the offset since the expression start offset begins
	before the name of the type (e.g. it includes
	public/private/etc modifiers).

2007-04-19  Lluis Sanchez Gual <lluis@novell.com> 

	* CSharpBinding.mdp: Don't copy referenced assemblies.
	* CSharpBindingCompilerManager.cs: Avoid compiler warning.

2007-04-09  Jeffrey Stedfast  <fejj@novell.com>

	* FormattingStrategy/CSharpIndentEngineStack.cs: If we are pushing
	a new FoldedStatement, we want to indent another level even if our
	parent is a case-statement (unlike what we do for new Blocks).

2007-03-23  Jeffrey Stedfast  <fejj@novell.com>

	* Gui/CSharpTextEditorExtension.cs (GetPreviousToken):
	Reimplemented to use GetCharAt().
	(KeyPress): Invalidate engine state if some key-code we don't
	handle changes the buffer before our cursor position.

2007-03-21  Ankit Jain  <jankit@novell.com>

	* Gui/CSharpTextEditorExtension.cs (HandleCodeCompletion): Handle
	code completion for sub namespaces.
	(IsInUsing): New.
	(GetPreviousToken): Handle the case when token starts at the first
	position in the file.

2007-03-20  Jeffrey Stedfast  <fejj@novell.com>

	* Gui/CSharpParameterDataProvider.cs (GetCurrentParameterIndex):
	Rewritten to use my CSharpIndentEngine parse tree to hopefully
	solve bug #80883 once and for all.

	* Gui/CSharpTextEditorExtension.cs (KeyPress): Instead of using
	engine.IsInsideMultiLineComment when deciding whether or not to
	reindent the line, use engine.LineBeganInsideMultiLineComment
	since that's what we really wanted to know.

	* FormattingStrategy/CSharpIndentEngine.cs: Added more convenience
	state properties (such as StackDepth and
	LineBeaganInside[VerbatimString,MultiLineComment].

2007-03-19  Jeffrey Stedfast  <fejj@novell.com>

	* Gui/CSharpTextEditorExtension.cs (KeyPress): If the before/after
	indent text is identical, then don't replace the text - instead
	calculate what the cursor position would be and set it. (found a
	way to avoid the text selection that occurs when you set
	CursorPosition).

	* FormattingStrategy/CSharpIndentEngine.cs (Push): Fix bug #81189
	by resetting popVerbarim when we pop the verbatim string literal
	off the stack

2007-03-16  Jeffrey Stedfast  <fejj@novell.com>

	* Gui/OverrideCompletionData.cs (InsertMethod, InsertProperty):
	(InsertEvent, InsertIndexer): Use spaces rather than tabs for
	indenting when appropriate. Fixes bug #81168.

	* Gui/CSharpTextEditorExtension.cs (GetDirectiveCompletionData):
	Add #pragma to the directives. Fixes bug #81131.

2007-03-14  Jeffrey Stedfast  <fejj@novell.com>

	* Gui/CSharpTextEditorExtension.cs (KeyPress): Fixed a bug where
	if you typed the full completion text and then used <Enter> to
	complete the fully-typed completion text, the Smart Indent code
	would indent the next line even though it shouldn't have done so.

2007-03-14  Ankit Jain  <jankit@novell.com>

	* CSharpBindingCompilerManager.cs (Compile): Use 'fname' as the
	filename to embed. It is updated appropriately by GetResourceId().

2007-03-13  Miguel de Icaza  <miguel@novell.com>

	* CSharpBindingCompilerManager.cs (Compile): an old patch that I
	had lying on my hard drive.   When using WinExe targets, pass the
	"winexe" flag to the compiler.

	Also pass the actual compiled resource file to be embedded, not
	the source file. 

2007-03-13  Jeffrey Stedfast  <fejj@novell.com>

	* FormattingStrategy/CSharpIndentEngine.cs (PushFoldedStatement):
	Push one anyway if our keyword (or our parent's keyword) is a loop
	or if-else keyword.

2007-03-11  Jeffrey Stedfast  <fejj@gnome.org>

	* Gui/CSharpTextEditorExtension.cs (KeyPress): Simplified a bit.
	(KeyPress): Changed the logic for the tab-completion check, if
	more than a single char has been inserted then it should be
	considered to be tab-completion.
	(KeyPress): Don't reindent multi-line comment lines unless they
	begin with a '*', in which case the user probably wants to realign
	them (if the first char on the line isn't a '*' then it might be a
	commented-out block of code, we don't want to reindent that).

2007-03-10  Jeffrey Stedfast  <fejj@gnome.org>

	* FormattingStrategy/CSharpIndentEngineStack.cs (Push): We now
	have an Inside.Case type to implement.

	* FormattingStrategy/CSharpIndentEngine.cs (PushColon): Push a
	Inside.Case onto the stack if appropriate and check
	FormattingProperties.IndentCaseLabels to see how we should handle
	indenting for case labels.
	(PushSemicolon): Always set keyword to String.Empty
	(PushOpenBrace): Changed the way we handle psuing a new block onto
	the stack if we our parent is Inside.Case (the logic is the same,
	but the check is a bit different now).
	(PushCloseBrace): If our parent is Inside.Case, then we can pop
	that along with the switch block.

	* FormattingStrategy/CSharpFormattingProperties.cs
	(IndentCaseLabels): Implemented.

2007-03-09  Jeffrey Stedfast  <fejj@novell.com>

	* CSharp.glade: Removed, no longer in use.

	* CSharpBinding.addin.xml: Add the c# Formatting options panel to
	the options dialog under the Text Editor options.

	* gtk-gui/gui.stetic: Added a new custom FormattingPanelWidget.

	* Gui/FormattingPanel.cs: New source file implementing a
	"Formatting" options panel specific to c#.

2007-03-09  Jeffrey Stedfast  <fejj@novell.com>

	* FormattingStrategy/CSharpIndentEngine.cs (PushColon): Respect
	the style settings for indenting goto labels.

	* FormattingStrategy/CSharpFormattingProperties.cs: New source
	file for c#-specific formatting properties.

2007-03-09  Jeffrey Stedfast  <fejj@novell.com>

	* FormattingStrategy/CSharpIndentEngine.cs (Push): Fixed a goof
	from yesterday's commit.

	* Gui/CSharpTextEditorExtension.cs (KeyPress): Rearranged some
	logic a bit to optimize seeking in the text buffer using arrow
	keys.

2007-03-08  Jeffrey Stedfast  <fejj@novell.com>

	* FormattingStrategy/CSharpIndentEngine.cs: Got rid of the hack
	that used this.commentEndedAt which was not only nasty, but didn't
	even always work right to begin with.

2007-03-07  Jeffrey Stedfast  <fejj@novell.com>

	* Gui/CSharpTextEditorExtension.cs (KeyPress): Same sort of fix as
	earlier wrt the user hitting Tab. If the user hits <Enter> and the
	base class does not insert a '\n', then it means the user has just
	accepted an auto-completed selection. In this case, return -
	there's nothing left for us to do.

	* FormattingStrategy/CSharpIndentEngineStack.cs (Push): Added a
	work-around for pushing a multi-line anonmymous method {} block
	inside a ParenList (e.g. as a callback argument).

	* FormattingStrategy/CSharpIndentEngine.cs (PushHash): Doh, how
	did I overlook this method when integrating my IndentEngine into
	MD?
	(PushNewLine): Properly handle multi-line array assignments.

	Fix for making "default :" (as opposed to "default:") inside a
	switch-statement work as it should, lwsp is not significant here.

	* FormattingStrategy/CSharpIndentEngine.cs (PushOpenParen): Clear
	the keyword after pushing a new ParenList onto the stack, when the
	ParenList is popped, the keyword is restored.
	(Reset): Changed the semantics of wordStart, this now initializes
	to -1 instead of 0.
	(PushNewLine): Reset wordStart back to -1.
	(Push): When checking for a keyword, we don't need to use
	lastNonLwsp anymore, just use wordStart.
	(Push): wordStart should always be set to point to the beginning
	of a word token (and never to word-delimiting chars like it was
	before).

2007-03-07  Jeffrey Stedfast  <fejj@novell.com>

	* Gui/CSharpTextEditorExtension.cs (KeyPress): Fixed a bug
	preventing tab-completion from working by chaining the KeyPress()
	to the parent.

2007-03-07  Jeffrey Stedfast  <fejj@novell.com>

	* FormattingStrategy/CSharpIndentEngine.cs: Fixed bug #81065 by
	looking at the last significant char on the line. Also now keeping
	the last char typed as part of the state so as to avoid having to
	linebuf.ToString() and then look.

2007-03-06  Jeffrey Stedfast  <fejj@novell.com>

	* FormattingStrategy/CSharpIndentEngine.cs: New class to aid in
	smart indenting.

	* FormattingStrategy/CSharpIndentEngineStack.cs: A broken out
	piece of CSharpIndentEngine.cs to compartamentalize it a bit.

	* FormattingStrategy/CSharpFormattingStrategy.cs
	(SmartIndentLine): Don't do any indenting, Smart Indent is handled
	elsewhere for now.
	(FormatLine): Simplified, because this now only has to worry about '>'

	* Gui/CSharpTextEditorExtension.cs (KeyPress): Implement our hooks
	into Smart Indenting here.

2007-02-27  Lluis Sanchez Gual <lluis@novell.com> 

	* Gui/OverrideCompletionData.cs, Gui/CSharpParameterDataProvider.cs,
	  FormattingStrategy/CSharpFormattingStrategy.cs: Track api changes.

2007-02-26  Jeffrey Stedfast  <fejj@novell.com>

	* FormattingStrategy/CSharpFormattingStrategy.cs
	(SmartIndentLine): Instead of wrapping the entire body of the
	function in an if-block, fix it so we swap the logic thus reducing
	the indent level of the main body making it easier to read (more
	likely to fit in the width of your editor window).
	(IsInsideStringOrComment): Completely rewritten to take into
	consideration verbatim string literals, char literals, and
	escaping inside string literals.
	(IsInsideDocumentationComment): Same.

2007-02-24  Zach Lute <zach.lute@gmail.com> 

	* Gui/CSharpParameterDataProvider.cs: GetCurrentParameterIndex() now
	  takes whether or not a comma is inside a string literal into account
	  when determining the index.  Fixes bug #80883.

2007-02-16  Lluis Sanchez Gual <lluis@novell.com> 

	* Gui/CSharpTextEditorExtension.cs: Don't show completion windo for
	  "using" keyword when written inside a class. Fixes bug #80868.
	* Parser/Resolver.cs: Removed unneeded parameter and fix potential
	  nullref.

2007-02-16  Lluis Sanchez Gual <lluis@novell.com> 

	* CSharpBinding.addin.xml: Change add-in versions to 0.13.

2007-02-15  Lluis Sanchez Gual <lluis@novell.com> 

	* Parser/Resolver.cs: When checking for accessibility take into account
	  the qualifier type. There are some restrictions when accessing to
	  protected members from incorrect qualifier types.

2007-02-15  Lluis Sanchez Gual <lluis@novell.com> 

	* Parser/Resolver.cs, Parser/LanguageItemVisitor.cs: Properly resolve
	  generic type identifiers. Fixes bug #80840.

2007-02-15  Lluis Sanchez Gual <lluis@novell.com> 

	* Parser/LanguageItemVisitor.cs, Parser/TypeVisitor.cs: When resolving
	  a field reference, look for static members if instance members
	  can't be found. Fixes bug #80841.

2007-02-12  Lluis Sanchez Gual <lluis@novell.com> 

	* CSharpBinding.mdp: Added project reference for NRefactory.
	* Parser/CSharpVisitor.cs: Collect parameter flags when parsing a
	  method. Fixes bug #80814.

2007-02-12  Lluis Sanchez Gual <lluis@novell.com> 

	* Gui/CSharpTextEditorExtension.cs: Allow crossing line boundaries when
	  looking for tokens. Fixes bug #80719.
	* CSharpBindingCompilerManager.cs: Handle internal packages.

2007-02-09  Lluis Sanchez Gual <lluis@novell.com> 

	* CSharpAmbience.cs: When converting a class, honor
	  UseFullyQualifiedName flag.
	* Makefile.am: distcheck fixes

2007-02-07  Lluis Sanchez Gual <lluis@novell.com> 

	* CSharpBinding.mdp: Updated.
	* gtk-gui/CSharpBinding.CodeGenerationPanelWidget.cs,
	  gtk-gui/gui.stetic: Translation fixes.

2007-02-06  Lluis Sanchez Gual <lluis@novell.com> 

	* Gui/OverrideCompletionData.cs: Moved from CSharpTextEditorExtension.
	* Gui/CSharpParameterDataProvider.cs, Gui/CSharpTextEditorExtension.cs,
	  CSharpBinding.mdp, Makefile.am: Implemented support for parameter
	  information window.
	* Parser/Resolver.cs: When searching a class, look in the calling class
	  namespace before looking in using directives. Some fixes for
	  generic types.
	* Parser/CodeGenerator.cs: Some fixes for generic types.
	* Parser/SharpDevelopTree/ReturnType.cs: Use our own system type table,
	  since the one from NRefactory has some VB types and does case
	  insensitive lookups.
	* CSharpAmbience.cs: Added some ConvertTypeName calls to show the
	  correct name for instantiated generic types.

2007-02-05  Lluis Sanchez Gual <lluis@novell.com> 

	* CSharpBinding.mdp,
	  gtk-gui/CSharpBinding.CodeGenerationPanelWidget.cs,
	  gtk-gui/gui.stetic, Makefile.am: i18n fixes.

2007-02-02  Lluis Sanchez Gual <lluis@novell.com> 

	* Gui/CSharpTextEditorExtension.cs: Cosmetic fixes in code completion
	  of "new".

2007-02-02  Lluis Sanchez Gual <lluis@novell.com> 

	* Gui/CSharpTextEditorExtension.cs, Parser/Resolver.cs: Implemented
	  code completion for "throw new". Don't show interfaces and abstract
	  classes when completing "new".
	* Parser/Parser.cs: Removed.
	* CSharpAmbience.cs: Make sure instantiated generic classes are shown
	  with the correct name.

2007-02-02  Lluis Sanchez Gual <lluis@novell.com> 

	* Gui/CSharpTextEditorExtension.cs: When typing '#', move it to the
	  first column is there is no other text before. Implemented code
	  completion for compiler directives. Don't show sealed methods in
	  the overridable list.

2007-02-02  Ankit Jain  <jankit@novell.com>

	* CSharpBindingCompilerManager.cs (Compile): Move resource compiling code
	to ..
	(GetResourceId): .. here. Improve error messages.

2007-02-01  Lluis Sanchez Gual <lluis@novell.com> 

	* Gui/CSharpTextEditorExtension.cs, Parser/Resolver.cs,
	  CSharpAmbience.cs: Code completion of overridable members. Yay!

2007-02-01  Lluis Sanchez Gual <lluis@novell.com> 

	* Parser/CodeGenerator.cs: Properly look for property references.

2007-01-31  Lluis Sanchez Gual <lluis@novell.com> 

	* Parser/Resolver.cs: Properly resolve alias directives. Fixes bug
	  #80248.

2007-01-30  Lluis Sanchez Gual <lluis@novell.com> 

	* Parser/LanguageItemVisitor.cs: Properly resolve calls to local
	  instance methods.

2007-01-30  Lluis Sanchez Gual <lluis@novell.com> 

	* Parser/CSharpVisitor.cs: When creating an enum, explicitely add the
	  System.Enum base class. Make enum files "const".
	* Parser/Resolver.cs: Removed some debug code. Show enum fields only
	  when resolving the type only. Fixes bug #80088.

2007-01-30  Lluis Sanchez Gual <lluis@novell.com> 

	* Parser/Resolver.cs: Fix overloaded operator filter.

2007-01-30  Lluis Sanchez Gual <lluis@novell.com> 

	* Parser/CSharpVisitor.cs, Parser/TypeVisitor.cs: Implemented support
	  for overloaded operators.
	* Parser/Resolver.cs: Exclude operators from the resolve list.
	* Parser/LanguageItemVisitor.cs: When resolving overloads, try to find
	  the closes matching signature.
	* Parser/ExpressionFinder.cs, Parser/SharpDevelopTree/Method.cs: Fix
	  warnings.
	* CSharpAmbience.cs: Properly format method names for overloaded
	  operators.

2007-01-29  Lluis Sanchez Gual <lluis@novell.com> 

	* gtk-gui/CSharpBinding.CodeGenerationPanelWidget.cs,
	  gtk-gui/gui.stetic: Updated.

2007-01-29  Lluis Sanchez Gual <lluis@novell.com> 

	* Gui/CodeGenerationPanel.cs, CSharpBindingCompilerManager.cs,
	  Project/CSharpCompilerParameters.cs: Implemented support for
	  CodePage and Win32Icon options.
	* CSharpBinding.mdp, Makefile.am: Updated.
	* gtk-gui/CSharpBinding.CodeGenerationPanelWidget.cs,
	  gtk-gui/generated.cs, gtk-gui/gui.stetic: Implement the options
	  panel using stetic.

2007-01-29  Lluis Sanchez Gual <lluis@novell.com> 

	* Gui/CSharpTextEditorExtension.cs, CSharpBinding.addin.xml: Created
	  new text editor extension to properly support code completion.
	* CSharpBinding.mdp, Makefile.am: Updated.
	* Parser/CSharpVisitor.cs, Parser/TypeVisitor.cs,
	  Parser/LanguageItemVisitor.cs,
	  Parser/SharpDevelopTree/Destructor.cs,
	  Parser/SharpDevelopTree/Method.cs,
	  Parser/SharpDevelopTree/ReturnType.cs,
	  Parser/SharpDevelopTree/Constructor.cs: Track api changes.
	* Parser/Resolver.cs: Track api changes. Properly resolve instantiated
	  generic types.
	* CSharpAmbience.cs: Properly show generic type names.

2007-01-24  Lluis Sanchez Gual <lluis@novell.com> 

	* Parser/LanguageItemVisitor.cs: Properly resolve method overloads.
	  Fixes bug #77418.

2007-01-24  Lluis Sanchez Gual <lluis@novell.com> 

	* CSharpBinding.mdp: Removed old dependency.
	* Parser/TypeVisitor.cs, Parser/SharpDevelopTree/ReturnType.cs: Take
	  into account that the parser returns array dimensions starting at
	  0, not at 1.  Fixed some issues when resolving indexer types. Fixes
	  bug #79382.
	* Parser/LanguageItemVisitor.cs: When visiting an indexer, if there is
	  no indexer (it can be an array access), return the target type.
	* templates/GtkSharp2Project.xpt.xml: Fix template.

2007-01-15  Lluis Sanchez Gual <lluis@novell.com> 

	* templates/GtkSharp2Project.xpt.xml: Use the new partial class model.

2007-01-11  Ankit Jain  <jankit@novell.com>

	* CSharpBindingCompilerManager.cs (Compile): Echo resgen command line
	for debugging purpose.

2007-01-11  Ankit Jain  <jankit@novell.com>

	* CSharpBindingCompilerManager.cs (Compile): .resx file has paths
	relative to the .resx file itself.

2006-12-21  Ankit Jain  <jankit@novell.com>

	* CSharpBindingCompilerManager.cs (Compile): Use project's base
	directory as the working directory when invoking the compiler.
	(DoCompilation): Add param 'working_dir'.

2006-12-17  Lluis Sanchez Gual <lluis@novell.com> 

	* CSharpBindingCompilerManager.cs: Track changes in FileService API.

2006-12-15  Ankit Jain  <jankit@novell.com>

	* CSharpBindingCompilerManager.cs (Compile): Filename arg to resgen
	should be quoted.

2006-12-15  Ankit Jain  <jankit@novell.com>

	* CSharpBindingCompilerManager.cs (Compile): Use resgen to convert .resx
	to embeddable resource format (.resources). Handle 'null' resourceId.

2006-12-14  Lluis Sanchez Gual <lluis@novell.com> 

	* CSharpBinding.mdp, Parser/SharpDevelopTree/CompilationUnit.cs,
	  Parser/SharpDevelopTree/Indexer.cs,
	  Parser/SharpDevelopTree/Parameter.cs,
	  Parser/SharpDevelopTree/Event.cs, Parser/SharpDevelopTree/Field.cs,
	  Parser/SharpDevelopTree/Property.cs, Makefile.am: Removed some
	  unnecessary Default* subclasses.
	* Parser/Parser.cs, Parser/CSharpVisitor.cs, Parser/Resolver.cs,
	  Parser/SharpDevelopTree/Destructor.cs,
	  Parser/SharpDevelopTree/Method.cs,
	  Parser/SharpDevelopTree/ReturnType.cs,
	  Parser/SharpDevelopTree/Class.cs,
	  Parser/SharpDevelopTree/Constructor.cs,
	  Parser/SharpDevelopTree/AttributeSection.cs: Renamed Abstract*
	  classes to Default*. Removed some unnecessary Default* subclasses.

2006-12-13  Ankit Jain  <jankit@novell.com>

	* Project/CSharpCompilerParameters.cs (Win32Resource): New.
	* CSharpBindingCompilerManager.cs (Compile): Generate 
	option for Win32Resource. Don't generate option for win32icon 
	if win32resource is defined.

2006-12-12  Ankit Jain  <jankit@novell.com>

	* CSharpBindingCompilerManager.cs (Compile): Use ProjectFile.ResourceId
	for embedded resources.

2006-11-17  Lluis Sanchez Gual <lluis@novell.com> 

	* Parser/Parser.cs: Why ParseMethodModies was set to false?
	  re-enabling. Fixes local variable code completion.

2006-11-14  Ankit Jain  <jankit@novell.com>

	* Gui/CodeGenerationPanel.cs (CodeGenerationPanelWidget.ctor): Add
	missing 'Module' option for compile target.

2006-11-13 David Makovský (Yakeen) <yakeen@sannyas-on.net>

	* Parser/SharpDevelopTree/CompilationUnit.cs: returning Tag colection
	* Parser/Parser.cs: filling comments into compilation unit

2006-11-11 David Makovský (Yakeen) <yakeen@sannyas-on.net>

	* Gui/CodeGenerationPanel.cs: fix for bug 79199
	
2006-09-21 Lluis Sanchez Gual  <lluis@novell.com> 

	* Parser/Resolver.cs: Fixed null check.

2006-09-12 Levi Bard  <taktaktaktaktaktaktaktaktaktak@gmail.com>

	* CSharpBindingCompilerManager.cs: Fixed win32 pathing issues, removed old mcs-specific compiler options (that weren't being used since [g]mcs options have been aligned with csc options), removed /bin/sh dependence.
	* Project/CSharpCompilerParameters.cs: Changed default compiler to mcs.

2006-09-12 Jacob Ilsø Christensen <jacobilsoe@gmail.com>
	
	* Parser/CSharpVisitor.cs: Fixed compile warning.
	* CSharpAmbience.cs: Track changes in Ambience.

2006-09-01 Lluis Sanchez Gual  <lluis@novell.com>

	* CSharpBinding/CSharpAmbience.cs: Avoid appending the class
	  name twice.

2006-08-07 Philip Turnbull <philip.turnbull@gmail.com>

	* CSharpBinding/CSharpBinding.addin.xml:
	Changed CSharpAmbience name from 'CSharp' to 'C#'.

	* CSharpBinding/CSharpAmbience.cs:
	Track API changes in Ambience.

2006-08-02 Lluis Sanchez Gual  <lluis@novell.com>

	* Parser/Resolver.cs: Added null check.

2006-07-30 Matej Urbas <matej.urbas@gmail.com>

	* CSharpAmbience.cs: Fixed a curious null exception.
	* Parser/CSharpVisitor.cs: Updated the visitor to store generic data as
	  parsed by NRefactory.
	* Parser/LanguageItemVisitor.cs:
	* Parser/TypeVisitor.cs: Updated the way various expressions are
	  treated in the code - to accommodate to new data for generics.
	* Parser/SharpDevelopTree/ReturnType.cs: Added support for generics in
	  return types.

	* Parser/SharpDevelopTree/GenericParameter.cs: The new file
	* CSharpBinding.mdp: Added the new file to the project.
	* Makefile.am: Added the new file to the project.

2006-07-28 Matej Urbas <matej.urbas@gmail.com>

	* CSharpAmbience.cs: Fixed the way generics and delegates are shown in the
	  code completion popup, and made some optimizations along the way.

2006-07-23 Matej Urbas <matej.urbas@gmail.com>

	* CSharpAmbience.cs: Small cosmetic corrections when converting generic
	  types

2006-07-17 Lluis Sanchez Gual  <lluis@novell.com>

	* Autotools/CSharpAutotoolsSetup.cs: Support compilation with gmcs.
	* CSharpBindingCompilerManager.cs: Track changes in SystemAssemblyService.

2006-07-12 Lluis Sanchez Gual  <lluis@novell.com> 

	* Parser/Resolver.cs: Use a more meaningful name for the "current unit".
	  Store the name of the file being resolved in currentFile.
	  Changed SearchVariable, so it now returns a LocalVariable object,
	  with all information, including the region.
	* Parser/LanguageItemVisitor.cs: Fix crash when processing indexers.
	  Return valid values for object creation expressions.
	* Parser/SharpDevelopTree/ReturnType.cs: Added constructor which
	  takes a properly resolved class as parameter.

2006-07-10 Alejandro Serrano <trupill@yahoo.es>
 
	* CSharpAmbience.cs: Add support for generics ambience.
	* Autotools/Makefile.am: Fixed error on compilation because
	  of a not found reference.

2006-07-05 Matej Urbas <matej.urbas@gmail.com>
 
	* CSharpAmbience.cs: Fixed a regression that displayed all base types of a
	  class to be of PersistentReturnType type.
	* Parser/CodeGenerator.cs:
	* Parser/CSharpVisitor.cs:
	* Parser/Resolver.cs: Updated to use ReturnType as BaseTypes in IClass
	  instances.
 
2006-07-04  Michael Hutchinson <m.j.hutchinson@gmail.com>

	* CSharpEnhancedCodeProvider.cs: Fix parsing of imports

2006-07-03 Lluis Sanchez Gual  <lluis@novell.com> 

	* CSharpLanguageBinding.cs:
	* CSharpBindingCompilerManager.cs: Track changes in ProjectReference.
	  Removed obsolete GenerateMakefile method.
	* Parser/CodeGenerator.cs: Fix member reference location.
	* Parser/ExpressionFinder.cs: Fix warning.
	* CSharpBinding.addin.xml: Updated versions.

2006-06-29  Michael Hutchinson <m.j.hutchinson@gmail.com>

	* CSharpBinding.mdp:
	* Makefile.am:
	* CSharpEnhancedCodeProvider.cs:
	New file, implements CodeDom methods CreateParser and Parse.
	
	* CSharpLanguageBinding.cs: Use new CSharpEnhancedCodeProvider.
	
	* CSharpBinding.addin.xml: Bump version so that AspNetAddIn can take 
	a dependency on the CodeProvider's CreateParser method.

2006-06-15 Scott Ellington  <scott.ellington@gmail.com>

	* Autotools/CSharpAutotoolsSetup.cs:
	
2006-06-15 Lluis Sanchez Gual  <lluis@novell.com>

	* CSharpBinding.addin.xml: Use the DataType element instead fof Class
	  to declare serializable types.

2006-06-07 Scott Ellington  <scott.ellington@gmail.com>

	* CSharpBinding.addin.xml:
	* Autotools/CSharpAutotoolsSetup.cs:
	* Autotools/Makefile.am:
	* Makefile.am:
	Add optional module for implementing simple autotools support

2006-05-22 Lluis Sanchez Gual  <lluis@novell.com>

	* Parser/Parser.cs:
	* Parser/CSharpVisitor.cs: 
	* Parser/Resolver.cs:
	* Parser/TypeVisitor.cs:
	* Parser/CodeGenerator.cs:
	* Parser/LanguageItemVisitor.cs:
	* Parser/ExpressionFinder.cs:
	* Parser/SharpDevelopTree/Destructor.cs:
	* Parser/SharpDevelopTree/Indexer.cs:
	* Parser/SharpDevelopTree/Method.cs:
	* Parser/SharpDevelopTree/Event.cs:
	* Parser/SharpDevelopTree/ReturnType.cs:
	* Parser/SharpDevelopTree/Field.cs:
	* Parser/SharpDevelopTree/Property.cs:
	* Parser/SharpDevelopTree/Class.cs:
	* Parser/SharpDevelopTree/Constructor.cs:
	* parse.cs:
	* Makefile.am: Use the new NRefactory library.

2006-05-04 Lluis Sanchez Gual  <lluis@novell.com>

	* CSharpBinding.addin.xml: Updated versions.
	* CSharpBinding.mdp: Updated.

2006-04-24 Lluis Sanchez Gual <lluis@novell.com> 

	* Parser/Resolver.cs: Fix nullref caused by delegates not having
	  a region or bodyRegion. Fixes bug #78143.

2006-04-21 Lluis Sanchez Gual <lluis@novell.com> 

	* CSharpLanguageBinding.cs: Implement GetSupportedClrVersions.
	* CSharpBinding.addin.xml: Added panel por selecting the target
	  runtime version.
	* CSharpBindingCompilerManager.cs: Support compilation for .net 2.0.
	
	* Parser/ExpressionFinder.cs:
	* Parser/LanguageItemVisitor.cs: Fixed warnings.

2006-04-18 Lluis Sanchez Gual  <lluis@novell.com>

	* templates/GladeSharpProject.xpt.xml:
	* templates/GladeSharp2Project.xpt.xml: Remove gnome dependency
	  from the glade file template. Fix by Sebastian Dröge.

2006-04-07  David Makovský (Yakeen) <yakeen@sannyas-on.net>

	* CSharpBinding.addin.xml: renamed attributes in FileFilter Extension

2006-04-04 Lluis Sanchez Gual  <lluis@novell.com>

	* Makefile.am: Reference nunit libraries using $(NUNIT_LIBS).

2006-04-03 Lluis Sanchez Gual  <lluis@novell.com>

	* templates/GtkSharp2Project.xpt.xml: Fix window
	  constructor.

2006-03-30 Lluis Sanchez Gual <lluis@novell.com> 

	* CSharpBinding.addin.xml: Updated references.

2006-03-24  Jacob Ilsø Christensen <jacobilsoe@gmail.com>

	* templates/ConsoleProject.xpt.xml: Added namespace clause.

2006-03-24 Lluis Sanchez Gual  <lluis@novell.com>   

	* CSharpBinding.mdp: Updated.
	* Makefile.am: Use an unified format. Patch by Matze Braun.
	* CSharpBinding.addin.xml: Updated add-in versions.

2006-03-24  Jacob Ilsø Christensen <jacobilsoe@gmail.com>

	* Test:
	* Test/Test.cs:
	* Makefile.am:
	Added an initial test which validates that the resolver
	can resolve namespaces.

2006-03-17  Jacob Ilsø Christensen <jacobilsoe@gmail.com>

	* Parser/Parser.cs:
	* Parser/Resolver.cs:
	Removed unused MonodocResolver.

2006-03-16  Jacob Ilsø Christensen  <jacobilsoe@gmail.com>

	* Parser/LanguageItemVisitor.cs: Make sure that composite
	namespaces are parsed correctly.

2006-03-12  David Makovský (Yakeen) <yakeen@sannyas-on.net>

        * CSharp.glade: Marking some strings not to be translated. Not include balast in pot file.
	
2006-03-08 Lluis Sanchez Gual  <lluis@novell.com>   

	* Parser/CodeGenerator.cs: Fixed issues when finding class
	  references. Add text line to found references.
	* Parser/LanguageItemVisitor.cs: Properly resolve primitive
	  type aliases.

2006-03-07 Lluis Sanchez Gual  <lluis@novell.com>   

	* Makefile.am:
	* CSharpBinding.addin.xml: Moved some templates to MD.Ide.

2006-03-06 Lluis Sanchez Gual  <lluis@novell.com>   

	* Parser/CSharpVisitor.cs: Added null check.

2006-03-02 Lluis Sanchez Gual  <lluis@novell.com>   

	* templates/GtkSharp2Project.xpt.xml: Use the new template syntax.

2006-02-24 Lluis Sanchez Gual  <lluis@novell.com>   

	* Parser/CSharpVisitor.cs: Generate parse information for
	  delegates.

2006-01-30 Lluis Sanchez Gual  <lluis@novell.com>   

	* Parser/Resolver.cs:
	* Parser/Parser.cs: Track changes in parser api.

2006-01-26 Lluis Sanchez Gual  <lluis@novell.com>   

	* CSharpBinding.addin.xml: Removed BlankCombine template (now
	in MonoDevelop.Ide).
	* Parser/CodeGenerator.cs: Properly find members referenced
	in subclasses.
	* Parser/LanguageItemVisitor.cs: Visit methods must always
	return a ILanguageItem.
	
	* templates/GtkSharpProject.xpt.xml:
	* templates/GnomeSharp2Project.xpt.xml:
	* templates/GladeSharp2Project.xpt.xml:
	* templates/GnomeSharpProject.xpt.xml:
	* templates/GladeSharpProject.xpt.xml: Moved to a Samples subcategories
	for now, to reduce clutter.

2006-01-15  Jacob Ilsø Christensen  <jacobilsoe@gmail.com>

	* Parser/CSharpVisitor.cs: Make sure that a null modifier
	is not passed to the Field constructor which is the case
	for enum members. Fixes bug 77080.

2006-01-13 Lluis Sanchez Gual  <lluis@novell.com>   

	* templates/GtkSharpProject.xpt.xml:
	* templates/GnomeSharp2Project.xpt.xml:
	* templates/GladeSharp2Project.xpt.xml:
	* templates/GnomeSharpProject.xpt.xml:
	* templates/GtkSharp2Project.xpt.xml:
	* templates/GladeSharpProject.xpt.xml: Moved project templates to
	the C# category, since they are C# templates.

2006-01-10 Lluis Sanchez Gual  <lluis@novell.com>   

	* Makefile.am:
	* CSharpBinding.mdp: Added Parser/LanguageItemVisitor.cs.
	
	* Parser/Parser.cs: Track api changes. Implemented ResolveIdentifier.
	* Parser/CSharpVisitor.cs: Store attribute values in CodeExpression
	instances.
	* Parser/Resolver.cs: Implemented ResolveIdentifier.
	* Parser/ExpressionFinder.cs: Updated from SharpDevelop.
	* Parser/SharpDevelopTree/AttributeSection.cs: Track api changes.
	
2005-12-19  Lluis Sanchez Gual  <lluis@novell.com> 

	* Parser/CodeGenerator.cs: Track api changes. Added support for
	renaming other member types (untested).

2005-12-13  Lluis Sanchez Gual  <lluis@novell.com> 

	* Parser/Parser.cs: Track api changes.
	* CSharpLanguageBinding.cs: Implemented the new methods in
	IDotNetLanguageBinding.
	* CSharpBinding.addin.xml: Removed some templates that don't really
	belong here.
	* CSharpBinding/CSharpBinding.mdp: Updated.
	
	* Parser/SharpDevelopTree/AttributeSection.cs:
	* Parser/CSharpVisitor.cs: Properly collect region and attribute
	information. This is a patch by Alex Gomes.
	Also: properly set the declaring type to class members.
	
	* Parser/Resolver.cs: Added two new methods: ResolveExpressionType
	returns the type of an arbitrary expression. ResolveIdentifier returns
	information about an identifier.
	
	* Parser/SharpDevelopTree/Indexer.cs:
	* Parser/SharpDevelopTree/Method.cs:
	* Parser/SharpDevelopTree/Parameter.cs:
	* Parser/SharpDevelopTree/Event.cs:
	* Parser/SharpDevelopTree/Field.cs:
	* Parser/SharpDevelopTree/Property.cs:
	* Parser/SharpDevelopTree/Class.cs:
	* Parser/SharpDevelopTree/Constructor.cs:
	* Parser/SharpDevelopTree/Destructor.cs: Set the declaring type to
	class members.
	
	* templates/*: Set the correct category, language and project type.
	* Parser/CodeGenerator.cs: Initial implementation of IRefactorer.

2005-11-17  Lluis Sanchez Gual  <lluis@novell.com>

	* templates/GtkSharpProject.xpt.xml:
	* templates/GnomeSharp2Project.xpt.xml:
	* templates/GladeSharp2Project.xpt.xml:
	* templates/ConsoleProject.xpt.xml:
	* templates/GnomeSharpProject.xpt.xml:
	* templates/GtkSharp2Project.xpt.xml:
	* templates/GladeSharpProject.xpt.xml:
	* templates/Library.xpt.xml: Added a reference to the System assembly
	in all project templates.
	
	* Makefile.am: Rebuild the assembly when resources are modified. 

2005-11-09  John Luke  <john.luke@gmail.com>

	* FormattingStrategy/CSharpFormattingStrategy.cs:
	use trimlineAboveText to decide whether to indent things
	like single line if, else, for, etc.
	second half of fix for bug # 76652
	
2005-10-28  John Luke  <john.luke@gmail.com>

	* FormattingStrategy/CSharpFormattingStrategy.cs:
	improve indentLine slightly, we want the indention +
	trimmed line, not the addional whitespace in front of it
	remove some old disabled/unported code

2005-10-23  John Luke  <john.luke@gmail.com>

	* CSharpBinding.addin.xml: add FormattingStrategy
	
2005-10-11  John Luke  <john.luke@gmail.com>

	* CSharpAmbience.cs: comment out SharpAssembly stuff
	
2005-10-11  Lluis Sanchez Gual  <lluis@novell.com>

	* CSharpBinding.addin.xml: Fixed incorrect class name.

2005-10-11  Lluis Sanchez Gual  <lluis@novell.com> 

	* CSharpBinding.addin.xml: Fixed addin header information.
	Use "id" attribuet instead of "name" to identify addins.

2005-10-06  John Luke  <john.luke@gmail.com> 

	* CSharpBindingCompilerManager (GenerateMakefile): fix mistaken
	empty statement warning
	
2005-10-06  Lluis Sanchez Gual  <lluis@novell.com> 

	* CSharpBinding.addin.xml:
	* CSharpLanguageBinding.cs: Register serializable types in the addin
	configuration file.

2005-10-04  Lluis Sanchez Gual  <lluis@novell.com> 

	* CSharpBinding.addin.xml: Added addin dependencies.

2005-09-23  Peter Johanson  <latexer@gentoo.org>

	* CSharpBindingCompilerManager.cs: Fix mcs location detection.

2005-08-20  Peter Johanson  <latexer@gentoo.org>

	* templates/GnomeSharp2Project.xpt.xml:
	* templates/GladeSharp2Project.xpt.xml:
	* templates/GtkSharp2Project.xpt.xml: Change gtk-sharp references to
	match new assembly versions.

2005-08-19  Lluis Sanchez Gual  <lluis@novell.com>

	* CSharpAmbience.cs: Don't include the inheritance tree when converting
	an enum.

2005-08-12  Lluis Sanchez Gual  <lluis@novell.com> 

	* templates/*:
	* CSharpBinding.addin.xml: Properly reference resource icons and
	templates.
	* Makefile.am: Embed icon and templates as resources.

2005-08-10  Ben Motmans  <ben.motmans@gmail.com>

	* CSharpBinding.mdp: references update

2005-08-10  Lluis Sanchez Gual  <lluis@novell.com> 

	* CSharpBindingCompilerManager.cs: Disable implicit references to
	system assemblies. All references must now be explicitely specified.

2005-08-06  Ben Motmans  <ben.motmans@gmail.com>

	* CSharpBindingCompilerManager.cs: correctly parse mcs errors.

2005-08-09  Lluis Sanchez Gual  <lluis@novell.com> 

	* Parser/Parser.cs:
	* Parser/Resolver.cs:
	* Gui/CodeGenerationPanel.cs: Use the new IParserContext API.
	
	* Parser/TypeVisitor.cs: Made the class internal.

2005-07-18  Lluis Sanchez Gual  <lluis@novell.com>

	* CSharp.glade:
	* Gui/CodeGenerationPanel.cs: Use a combo entry for the main class
	field. Disable that entry when building a library.

2005-07-14  Ben Motmans  <ben.motmans@gmail.com>

	* templates/GladeSharp2Project.xpt.xml:
	removed duplicate reference to glade-sharp-2.0

2005-07-11  Lluis Sanchez Gual  <lluis@novell.com>

	* Project/CSharpCompilerParameters.cs: Implement ICloneable.
	* CSharpLanguageBinding.cs: CreateCompilationParameters now returns an
	ICloneable.

2005-05-15  Lluis Sanchez Gual  <lluis@novell.com> 

	* CSharp.glade: Several fixes to make the dialogs more conforming
	to the HIG.

2005-04-17  John Luke  <john.luke@gmail.com>

	* Makefile.am: fix distcheck

2005-04-09  John Luke  <john.luke@gmail.com>

	* PrettyPrinter: kill (it was empty)
	* Parser/ExpressionFinder.cs: remove redundent assignment
	to fix warning
	* Gui/CodeGenerationPanel.cs: remove unused StringParserService
	section

2005-03-20  John Luke  <john.luke@gmail.com>

	* CSharpBindingCompilerManager.cs: display warning on invalid
	reference lookup, partial fix for bug #70645

2005-03-07  Lluis Sanchez Gual  <lluis@novell.com>

	* Parser/Resolver.cs: Track api changes.

2005-02-16  Ben Motmans  <ben.motmans@gmail.com>

	* ConsoleProject.xpt.xml:
	* CSharpSessionStateWebService.xpt.xml:
	* CSharpWebService.xpt.xml:
	* Library.xpt.xml:
	Consistent naming

	* GladeSharp2Project.xpt.xml:
	* GnomeSharp2Project.xpt.xml:
	* GtkSharp2Project.xpt.xml:
	* CSharpBinding.addin.xml:
	* Makefile.am:
	Added templates

2005-02-18  John Luke  <john.luke@gmail.com>

	* CSharpCompilerManager.cs: pass /optimize if enabled

2005-02-05  John Luke  <john.luke@gmail.com>

	* Gui/CodeGenerationPanel.cs: enable doc generation

2005-02-01  John Luke  <john.luke@gmail.com>

	* Parser/Parser.cs: use ErrorInfo

2005-01-28  John Luke  <john.luke@gmail.com>

	* Parser/Resolver.cs (IsAccessible):
	internal should return true
	fixes bug# 60526

2005-01-28  John Luke  <john.luke@gmail.com>

	* Parser/Resolver.cs: remove incorrect special case
	for properties that made them visible to completion
	incorrectly on static to instance and vice-versa
	fixes bug# 69741

2005-01-28  John Luke  <john.luke@gmail.com>

	* Parser/Parser.cs: update to CanParse
	* Parser/*.cs: update some minor fixes from SD

2005-01-27  John Luke  <john.luke@gmail.com>

	* CSharpBindingCompilerManager.cs:
	* Parser/CSharpVisitor.cs:
	* Parser/Resolver.cs:
	* FormattingStrategy/CSharpFormattingStrategy.cs: comment out
	some unused lines that produced warnings

2005-01-27  John Luke  <john.luke@gmail.com>

	* CSharp.glade: update to new glade format
	* Gui/CodeGenerationPanel.cs:
	* CSharp.glade: use ComboBox instead of OptionMenu

2005-01-26  John Luke  <john.luke@gmail.com>

	* templates/GtkSharpProject.xpt.xml
	* templates/GnomeSharpProgram.xft.xml
	* templates/GladeSharpProject.xpt.xml: clean up,
	consistent naming, spacing, tabbing

2005-01-24  Lluis Sanchez Gual  <lluis@novell.com>

	* CSharpLanguageBinding.cs: 
	* CSharpBindingCompilerManager.cs: Use the new progress monitor API.
	
2005-01-11  Lluis Sanchez Gual  <lluis@novell.com>

	* CSharpLanguageBinding.cs: 
	* Gui/ChooseRuntimePanel.cs:
	* Gui/CodeGenerationPanel.cs:
	* CSharpBindingCompilerManager.cs:
	* CSharpBinding.addin.xml:
	* Parser/Parser.cs:
	* Parser/Resolver.cs: Follow architecture changes.
	
	* Project/CSharpCompilerParameters.cs: Moved some parameters and enum
	definitions to DotNetProjectConfiguration.
	
	* CSharp.glade:
	* Gui/OutputOptionsPanel.cs: Removed dialog now implemented in Monodevelop.Base.

	* Project/CSharpProject.cs:
	* CSharpBindingExecutionManager.cs.in: Removed. Not needed any more.
	
	* Makefile.am: Updated.

2004-12-13  Lluis Sanchez Gual  <lluis@novell.com>

	* CSharpBindingCompilerManager.cs: StatusBarService.ProgressMonitor is
	not a StatusBar widget any more.

2004-12-09  Todd Berman  <tberman@off.net>

	* CSharpBindingCompilerManager.cs: mcs in Mono 1.1.3 now outputs error
	on stderr instead of stdout. The old code just inspected stdout, now
	we look at both.

2004-12-08  Everaldo Canuto  <everaldo_canuto@yahoo.com.br>

	* CSharpBindingCompilerManager.cs: Add support to multiple compilers
	in Makefiles generated by MonoDevelop.

2004-12-07  Alexandre Gomes <alexmipego@hotmail.com>

	* CSharpLanguageBinding.cs: Added CommentTag to be used by (Un)CommentCode

2004-11-16  Todd Berman  <tberman@off.net>

	* CSharpBindingCompilerManager.cs: Properly output local assembly
	references.

2004-11-09  Todd Berman  <tberman@off.net>

	* CSharpBindingCompilerManager.cs: Use SAS for assembly detection.
	This doesnt seem to break anything for me.

2004-11-05  Levi Bard  <taktaktaktaktaktaktaktaktaktak@gmail.com>
      
	* Parser/Parser.cs: Added HandlesFileExtension to work with new
	IParser

2004-11-01  Todd Berman  <tberman@off.net>

	* CSharpBindingExecutionManager.cs.in: Add fu to actually properly run
	the execute script.

2004-09-25  Peter Johanson <latexer@gentoo.org>

	* CSharpBindingCompilerManager.cs: Hack to a hack to fix compilation
	on 1.1.1 with the new corlib location.

2004-09-20  Valters Svabe  <valters@inbox.lv>

	* CSharpBindingExecutionManager.cs.in: Respect PauseConsoleOutput
	option.

2004-07-07  Lluis Sanchez Gual  <lluis@novell.com>

	* Parser/Resolver.cs: When locating the inner or outer classes, get the 
	  class from the parser service, since it has all type names resolved 
	  (the one got from the compilation unit does not).

2004-07-05  Todd Berman  <tberman@off.net>

	* CSharpBindingExecutionManager.cs: removed.
	* CSharpBindingExecutionManager.cs.in: Added
	* Makefile.am: modified.
	This patch is from Marcin Krzyzanowski <krzak@pld-linux.org> and it
	fixes mint issues.

2004-07-04  John Luke  <jluke@cfl.rr.com>

	* Gui/OutputOptionsPanel.cs: use MessageService, remove ResourceService

2004-07-01  Todd Berman  <tberman@off.net>

	* Parser/Resolver.cs: fix up CtrlSpace resolving to add this. members
	to the completion window. We need to figure out what is causing the
	public class MyWindow : Window not working but the public class
	MyWindow : Gtk.Window still works and this stuff will look good.
	* Gui/OutputOptionsPanel.cs: remove dup'd namespace.

2004-06-22  John Luke <jluke@cfl.rr.com>

	* CSharpBindingCompilerManager.cs: be explicit when copying the
	assembly to avoid silent failures (use build/bin/. not build/bin)

2004-06-17  John Luke  <jluke@cfl.rr.com>

	* Gui/OutputOptionsPanel.cs: Use MonoDevelop.Gui.Widgets.FileSelector
	instead of Gtk.FileSelection

2004-05-30  Lluis Sanchez Gual  <lluis@ximian.com>

	* Parser/Resolver.cs: Resolve base classes using a deep search in all
	  project references. In SearchType, fixed namespace lookup so it works
	  for inner classes as well.

2004-05-27  Todd Berman  <tberman@sevenl.net>

	* CSharpBindingCompilerManager.cs: fix up projects with space in
	their name.

2004-05-26  Todd Berman  <tberman@sevenl.net>

	* CSharpBindingCompilerManager.cs: more makefile magic.

2004-05-25  Todd Berman  <tberman@sevenl.net>

	* Parser/Parser.cs: Update MonodocResolver and IsAsResolver.
	* Parser/Resolver.cs: Update MonodocResolver and IsAsResolver

2004-05-25  Lluis Sanchez Gual  <lluis@ximian.com>

	* Parser/Parser.cs: Set the file name to the region of each parsed class.
	  Added IProject parameter in CtrlSpace and Resolve.
	* Parser/Resolver.cs: Added IProject parameter where needed. Use new 
	  methods in IParserService.

2004-05-25  Todd Berman  <tberman@sevenl.net>

	* CSharpLanguageBinding.cs: signature change for GenerateMakefile
	* CSharpBindingCompilerManager.cs: lots of new stuff, make run compat
	stuff, etc, etc

2004-05-22  Todd Berman  <tberman@sevenl.net>

	* CSharpBindingCompilerManager.cs: add "s to work around potential
	spaces... spaces... urgh. closes bug #58840

2004-05-18  Todd Berman  <tberman@sevenl.net>

	* CSharpBindingCompilerManager.cs: add a warning to the top of the
	makefiles.

2004-05-18  Todd Berman  <tberman@sevenl.net>

	* CSharpBindingCompilerManager.cs: change from /option to -option

2004-05-16  Todd Berman  <tberman@sevenl.net>

	* CSharpBindingCompilerManager.cs: output a much better makefile.
	now using /pkg, checking for deps, etc.
	* Parser/Parser.cs: passthrough for Monodoc resolver.
	* Parser/Resolver.cs: New resolver for identifying a type and sending
	back a monodoc url for it. It needs to be worked on to return proper
	M: style urls in addition to T: style urls.

2004-05-08  Todd Berman  <tberman@sevenl.net>

	* CSharpBindingCompilerManager.cs: output /define and /main properly.

2004-05-08  Todd Berman  <tberman@sevenl.net>

	* CSharpBindingCompilerManager.cs: output /unsafe properly.

2004-04-29  Todd Berman  <tberman@sevenl.net>

	* CSharpBindingCompilerManager.cs: add a clean target

2004-04-28  Todd Berman  <tberman@sevenl.net>

	* CSharpBindingExecutionManager.cs: People running apps from the IDE
	can be assumed to want line numbers if we can give them. Adding --debug
	to the execution.

2004-04-28  Todd Berman  <tberman@sevenl.net>

	* CSharpBindingCompilerManager.cs: add code for project references.

2004-04-28  Todd Berman  <tberman@sevenl.net>

	* CSharpBindingCompilerManger.cs: add code for assembly references
	and embeding resources.

2004-04-28  Todd Berman  <tberman@sevenl.net>

	* CSharpLanguageBinding.cs: implemented GetMakefile passthru.
	* CSharpBindingCompilerManager.cs: dirty dirty dirty first draft run
	through of GenerateMakefile, I have tested this with exactly *one*
	project, and that is all, just wanted to get something in svn.

2004-04-24  Todd Berman  <tberman@sevenl.net>

	* Parser/Parser.cs: new IsAsResolver passthrough.
	* Parser/Resolver.cs: new IsAsResolver to manage some (limited)
	completion there.

2004-04-23  John Luke  <jluke@cfl.rr.com>

	* CsharpBindingCompilerManager.cs: add /codepage:utf8

2004-04-19  Todd Berman  <tberman@sevenl.net>

	* Parser/Resolver.cs: Turn local variables into a properly consumable
	type for code completion.

2004-04-09  Todd Berman  <tberman@sevenl.net>

	* CSharpBindingCompilerManager.cs: Show that something is going
	on so people dont get too worried. (Speed might need some work)
	* Makefile.am: add glib

2004-04-04  John Luke  <jluke@cfl.rr.com>

	* CSharpBindingExecutionManager.cs: improve error message

2004-04-03  Todd Berman  <tberman@sevenl.net>

	* Gui/OutputOptionsPanel.cs:
	* Gui/CodeGenerationPanel.cs: gettextify

2004-04-03  Todd Berman  <tberman@sevenl.net>

	* Project/CSharpCompilerParameters.cs: duh, refix library target bug

2004-04-01  Todd Berman  <tberman@sevenl.net>

	* Gui/OutputOptionsPanel.cs: parse resource string, closes bug #56325

2004-03-31  Todd Berman  <tberman@sevenl.net>

	* CSharpBindingExecutionManager.cs: dont test CompileTarget, for now
	assume *everything* is being run in a terminal and pausing for output.

2004-03-31  Todd Berman  <tberman@sevenl.net>

	* Makefile.am: i think this fixed nick's bug.

2004-03-28  John Luke  <jluke@cfl.rr.com>

	* Parser/Resolver.cs: comment some CWL's that were causing exceptions

2003-03-27  Todd Berman  <tberman@sevenl.net>

	* *: update parser and other things from upstream.

2003-03-26  John Luke  <jluke@cfl.rr.com>

	* CSharpBindingExecutionManager.cs: use xterm instead of
	gnome-terminal, fixes bug #53689 and also works when people
	don't have gnome-terminal installed

2004-03-22  Todd Berman  <tberman@sevenl.net>

	* Project/CSharpCompilerParameters.cs: reverse WinExe and Library in
	the enum, closing bug #55881. fix from vdaron

2004-03-21  Todd Berman  <tberman@sevenl.net>

	* Parser/Parser.cs:
	* Parser/CSharpVisitor.cs:
	* Parser/Resolver.cs:
	* Parser/TypeVisitor.cs:
	* Parser/SharpDevelopTree/Indexer.cs:
	* Parser/SharpDevelopTree/Method.cs:
	* Parser/SharpDevelopTree/Event.cs:
	* Parser/SharpDevelopTree/ReturnType.cs:
	* Parser/SharpDevelopTree/Field.cs:
	* Parser/SharpDevelopTree/Property.cs:
	* Parser/SharpDevelopTree/Constructor.cs:
	* Parser/SharpDevelopTree/Class.cs: changes to reflect brand spankin
	new parser. (from #D)
